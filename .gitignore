# Eclipse, ctags, Mac metadata, log files
cordapp/.classpath
cordapp/.project
cordapp/tags
.DS_Storecordapp/
cordapp/*.log
cordapp/*.log.gz
cordapp/*.orig

cordapp/.gradle

# General build files
cordapp/**/build/*
cordapp/!docs/build/*

lib/dokka.jar

### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

cordapp/*.iml

## Directory-based project format:
.idea
cordapp/.idea

# if you remove the above rule, at least ignore the following:

# Specific files to avoid churn
cordapp/.idea/*.xml
cordapp/.idea/copyright
cordapp/.idea/jsLibraryMappings.xml

# User-specific stuff:
cordapp/.idea/tasks.xml
cordapp/.idea/dictionaries

# Sensitive or high-churn files:
cordapp/.idea/dataSources.ids
cordapp/.idea/dataSources.xml
cordapp/.idea/sqlDataSources.xml
cordapp/.idea/dynamic.xml
cordapp/.idea/uiDesigner.xml

# Gradle:
cordapp/.idea/libraries

# Mongo Explorer plugin:
cordapp/.idea/mongoSettings.xml

## File-based project format:
cordapp/*.ipr
cordapp/*.iws

## Plugin-specific files:

# IntelliJ
cordapp/out/
cordapp/workflows/out/
cordapp/contracts/out/
cordapp/clients/out/

# mpeltonen/sbt-idea plugin
cordapp/.idea_modules/

# JIRA plugin
cordapp/atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
cordapp/com_crashlytics_export_strings.xml
cordapp/crashlytics.properties
cordapp/crashlytics-build.properties

# docs related
cordapp/docs/virtualenv/

# if you use the installQuasar task
cordapp/lib


clients/bin/*
workflows/bin/*
contracts/bin/*
workflows/.settings/*
contracts/.settings/*
clients/.settings/*

/clients/bin/*

.DS_Store
cordapp/.settings/*
cordapp/.idea/*
.idea/runConfigurations

########### Terraform ###########

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
