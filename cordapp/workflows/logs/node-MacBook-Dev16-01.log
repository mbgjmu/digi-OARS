[INFO ] 2020-08-21T15:17:31,435Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/generated-custom-cordapps/20200821-151730.300/custom-cordapp_1_7_d2d7e09c-ee92-446d-a314-04b8fa1ae469.jar, rootPackageName=null) {}
[INFO ] 2020-08-21T15:17:31,506Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/generated-custom-cordapps/20200821-151730.300/custom-cordapp_1_7_d2d7e09c-ee92-446d-a314-04b8fa1ae469.jar {}
[INFO ] 2020-08-21T15:17:33,679Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows ... {}
[INFO ] 2020-08-21T15:17:33,812Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-08-21T15:17:34,565Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-08-21T15:17:35,299Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-08-21T15:17:35,310Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-08-21T15:17:35,311Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-08-21T15:17:35,770Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-08-21T15:17:35,783Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-08-21T15:17:36,208Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-08-21T15:17:36,208Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:36,208Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-08-21T15:17:36,343Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:36,343Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-08-21T15:17:36,790Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-08-21T15:17:37,177Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-08-21T15:17:37,188Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-08-21T15:17:37,198Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-08-21T15:17:37,199Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-08-21T15:17:37,199Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-08-21T15:17:37,810Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:37,810Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-08-21T15:17:37,892Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:37,892Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-08-21T15:17:37,913Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:37,913Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-08-21T15:17:37,945Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-08-21T15:17:37,945Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-08-21T15:17:38,019Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,041Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-08-21T15:17:38,084Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-08-21T15:17:38,129Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-08-21T15:17:38,129Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-08-21T15:17:38,129Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-08-21T15:17:38,140Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-08-21T15:17:38,140Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-08-21T15:17:38,161Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,161Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-08-21T15:17:38,161Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,172Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-08-21T15:17:38,172Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,172Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,184Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-08-21T15:17:38,238Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,238Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-08-21T15:17:38,263Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,263Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-08-21T15:17:38,263Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,297Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-08-21T15:17:38,311Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,311Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-08-21T15:17:38,311Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,311Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,311Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-08-21T15:17:38,340Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,350Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-08-21T15:17:38,350Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-08-21T15:17:38,350Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,350Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-08-21T15:17:38,350Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-08-21T15:17:38,361Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-08-21T15:17:38,361Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-08-21T15:17:38,361Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-08-21T15:17:38,363Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-08-21T15:17:38,372Z [Connection worker] internal.TestCordappImpl. - Cleaning VCS Checkout Cache (/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/.gradle/vcs-1) {}
[INFO ] 2020-08-21T15:17:38,382Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-08-21T15:17:38,382Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/zhenzhentan/zcordapp/digi-OARS/cordapp/.gradle {}
[INFO ] 2020-08-21T15:17:38,393Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-08-21T15:17:38,417Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-08-21T15:17:40,880Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200821-151733.416/nodes/0/cordapps] {}
[INFO ] 2020-08-21T15:17:40,882Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-08-21T15:17:40,890Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-08-21T15:17:40,915Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-08-21T15:17:43,266Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-08-21T15:17:43,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-08-21T15:17:43,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-08-21T15:17:43,905Z [Test worker] internal.NodeFlowManager. - Registered com.newamerica.flows.Initiator to initiate com.newamerica.flows.Responder (version 1) {}
[INFO ] 2020-08-21T15:17:44,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-08-21T15:17:33.404Z
      epoch=1
  } {}
[INFO ] 2020-08-21T15:17:49,019Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:49,021Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200821-151733.416/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:49,021Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:49,049Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:49,097Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:49,101Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:50,935Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,495Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,497Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,502Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,502Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,582Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:51,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-08-21T15:17:51,633Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-08-21T15:17:51,633Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-08-21T15:17:51,831Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-08-21T15:17:51,838Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-08-21T15:17:51,838Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:51,842Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-08-21T15:17:51,973Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:52,023Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-08-21T15:17:52,034Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-08-21T15:17:52,036Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-08-21T15:17:52,040Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:52,063Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:52,087Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=AAF620DB15A9FDFCF7D5855527648D2F4F300B404301741C6328B29DC7EC7F10 uploader=app filename=Open Asset Repatriation System {}
[INFO ] 2020-08-21T15:17:52,094Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-08-21T15:17:52,096Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-08-21T15:17:52,482Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:52,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:52,515Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:52,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:52,516Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:52,524Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200821-151733.416/nodes/1/cordapps] {}
[INFO ] 2020-08-21T15:17:52,524Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-08-21T15:17:52,524Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-08-21T15:17:52,531Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-08-21T15:17:52,553Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-08-21T15:17:52,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-08-21T15:17:52,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-08-21T15:17:52,578Z [Test worker] internal.NodeFlowManager. - Registered com.newamerica.flows.Initiator to initiate com.newamerica.flows.Responder (version 1) {}
[INFO ] 2020-08-21T15:17:52,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-08-21T15:17:33.404Z
      epoch=1
  } {}
[INFO ] 2020-08-21T15:17:53,002Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,003Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200821-151733.416/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,003Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,018Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,020Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,020Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,104Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,116Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,117Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,119Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,119Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,170Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,175Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-08-21T15:17:53,178Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:53,178Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:53,271Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:53,273Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-08-21T15:17:53,288Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-08-21T15:17:53,288Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,290Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:53,296Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,302Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-08-21T15:17:53,302Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-08-21T15:17:53,302Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-08-21T15:17:53,305Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,309Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:53,333Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=AAF620DB15A9FDFCF7D5855527648D2F4F300B404301741C6328B29DC7EC7F10 uploader=app filename=Open Asset Repatriation System {}
[INFO ] 2020-08-21T15:17:53,340Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:53,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-08-21T15:17:53,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:53,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:53,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:53,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:53,372Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200821-151733.416/nodes/2/cordapps] {}
[INFO ] 2020-08-21T15:17:53,372Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-08-21T15:17:53,372Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-08-21T15:17:53,380Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/zhenzhentan/zcordapp/digi-OARS/cordapp/workflows/build/mock-network/20200821-151733.416/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-08-21T15:17:53,398Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-08-21T15:17:53,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-08-21T15:17:53,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-08-21T15:17:53,421Z [Test worker] internal.NodeFlowManager. - Registered com.newamerica.flows.Initiator to initiate com.newamerica.flows.Responder (version 1) {}
[INFO ] 2020-08-21T15:17:53,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-08-21T15:17:33.404Z
      epoch=1
  } {}
[INFO ] 2020-08-21T15:17:53,785Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,787Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200821-151733.416/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,787Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,802Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,805Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,805Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,875Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,882Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,883Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,885Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,885Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,924Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-08-21T15:17:53,928Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-08-21T15:17:53,929Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:53,929Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:54,262Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-08-21T15:17:54,264Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-08-21T15:17:54,280Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-08-21T15:17:54,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,281Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:54,286Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,292Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-08-21T15:17:54,292Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-08-21T15:17:54,292Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-08-21T15:17:54,294Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,298Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:54,319Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=AAF620DB15A9FDFCF7D5855527648D2F4F300B404301741C6328B29DC7EC7F10 uploader=app filename=Open Asset Repatriation System {}
[INFO ] 2020-08-21T15:17:54,325Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,327Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1598023071838) {}
[INFO ] 2020-08-21T15:17:54,328Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-08-21T15:17:54,335Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,336Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:54,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1598023073288) {}
[INFO ] 2020-08-21T15:17:54,344Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:54,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,351Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-08-21T15:17:54,357Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,357Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-08-21T15:17:54,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1598023074280) {}
[INFO ] 2020-08-21T15:17:54,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-08-21T15:17:54,359Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.newamerica.flows.Initiator, currently using: class com.newamerica.flows.Responder {}
[INFO ] 2020-08-21T15:17:54,359Z [Test worker] internal.NodeFlowManager. - Registered com.newamerica.flows.Initiator to initiate com.newamerica.flows.Responder (version 1) {}
[WARN ] 2020-08-21T15:17:54,361Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.newamerica.flows.Initiator, currently using: class com.newamerica.flows.Responder {}
[INFO ] 2020-08-21T15:17:54,361Z [Test worker] internal.NodeFlowManager. - Registered com.newamerica.flows.Initiator to initiate com.newamerica.flows.Responder (version 1) {}
[INFO ] 2020-08-21T15:17:54,367Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2020-08-21T15:17:54,377Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2020-08-21T15:17:54,380Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
