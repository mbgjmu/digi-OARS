---
# file: docker-engine/tests/test.yml

- hosts: all
  gather_facts: True
  become: False
  vars:
    default_docker_network: "172.80.0.0/16"   # a more or less random allocation, hopefully different than default one
    insecure_registry: 'myregistry:5000'      # a random address which doesn't exist
  roles:
    - role: ansible-r3-roles/docker-engine
      docker_engine_version: 'latest'
      docker_engine_docker_users:
        - '{{ ansible_env.USER }}'
      docker_engine_config:
        debug: true
        insecure-registries:
          - '{{ insecure_registry }}'
        default-address-pools:
          - base: "{{ default_docker_network }}"
            size: 24
  tasks:
    - name: Test if service has been really enabled in systemd
      command: systemctl is-enabled {{ docker_engine_service_name }}
      register: systemd_enabled
      failed_when: >
        'enabled' not in systemd_enabled.stdout and
        'Failed to get unit file' not in systemd_enabled.stderr
      changed_when: False
      when: >
        ansible_service_mgr == 'systemd'
      tags: tests

    - name: Test if it is possible to run some docker commands
      become: True
      command: docker {{ item }}
      changed_when: False
      loop:
        - 'pull alpine'
        - 'images'
      tags: tests

    - name: Check if the Docker engine configuration has been actually applied (default-address-pool)
      become: True
      shell: docker run --rm=true alpine ip addr | grep inet | awk '{print $2}'
      register: configuration_test_address
      changed_when: False
      failed_when: >
        (configuration_test_address.stdout_lines | length == 0) and
        (configuration_test_address.stdout_lines | ipaddr(default_docker_network) | length) == 0
      tags: tests

    - name: Check if the Docker engine configuration has been actually applied (insecure-registries)
      become: True
      command: docker system info
      register: configuration_test_registries
      changed_when: False
      failed_when: >
        insecure_registry not in configuration_test_registries.stdout
      tags: tests
